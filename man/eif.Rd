% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eif.R
\name{eif}
\alias{eif}
\title{Extended Isolation Forest}
\usage{
eif(X, ntrees, sample_size, ExtensionLevel)
}
\arguments{
\item{X}{(matrix) A numeric data matrix.}

\item{ntrees}{(integer) Number of trees to be used in fitting the forest.}

\item{sample_size}{(integer) Number of rows to be sub-sampled in creating each tree.
This must be less than the number of observations in the dataset.}

\item{ExtensionLevel}{(integer) Degrees of freedom in choosing the hyperplanes 
for dividing up the data. This must be less than the dimension of the dataset. Setting
\code{ExtensionLevel = 0} will allow you to fit a standard isolation forest.}
}
\value{
A named list of length two containing the isolation forest (in \code{iforest})
and anomaly scores (in \code{scores}).
}
\description{
The \code{eif} function is an R wrapper around the original Python implementation 
of the Extended Isolation Forest (Hariri, Kind, Brunner (2018) <arXiv:1811.02141>) algorithm for 
anomaly detection, developed by the original authors of the paper. This extension improves the 
consistency and reliability of anomaly scores produced by the standard Isolation Forest 
(Liu, Ting, Zhou (2008) <doi:10.1109/ICDM.2008.17>). Extended Isolation Forests allows
for the slicing of the data to be carried out using hyperplanes with random slopes which 
results in improved score maps.
}
\examples{
\dontrun{
eif(as.matrix(mtcars), ntrees = 10L, sample_size = 5L, ExtensionLevel = 1L)
}
}
\references{
\itemize{
\item Liu, Ting and Zhou. "Isolation Forest." IEEE International Conference on Data Mining (2008).
\item Hariri, Kind and Brunner. "Extended Isolation Forest." arXiv:1811.02141 (2018).
}
}
